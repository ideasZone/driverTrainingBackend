<?xml version="1.0" encoding="UTF-8"?>
<!--本示例采用DBCP连接池，应预先把DBCP的jar包复制到工程的lib目录下。 --> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	>

       <!-- 属性文件 --> 
     <context:property-placeholder location="classpath:datasource.properties" />
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
     	<property name="driverClassName" value="${jdbc.driver}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.userName}"/>
	    <property name="password" value="${jdbc.password}"/>
     	<property name="initialSize" value="${jdbc.initialSize}"/>
     	<property name="maxActive" value="${jdbc.maxActive}"/>
     	<property name="maxIdle" value="${jdbc.maxIdle}"/>
     	<property name="minIdle" value="${jdbc.minIdle}"/>
     </bean>
     
	

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 实现基于注解的事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
    <!--Configuring a global date & time format
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="registerDefaultFormatters" value="false" />
        <property name="formatters">
            <set>
                <bean class="org.springframework.format.number.NumberFormatAnnotationFormatterFactory" />
            </set>
        </property>
        <property name="formatterRegistrars">
            <set>
                <bean class="org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar">
                    <property name="dateFormatter">
                        <bean class="org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean">
                            <property name="pattern" value="yyyy-MM-dd"/>
                        </bean>
                    </property>
                </bean>
            </set>
        </property>
    </bean>
-->

    <!-- sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--dataSource属性指定要用到的连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--configLocation属性指定mybatis的核心配置文件-->
        <property name="configLocation" value="classpath:Configuration.xml"/>
        <!-- 所有配置的mapper文件 -->
        <property name="mapperLocations" value="classpath*:com/jzst/mapper/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tdls.dao"/>
    </bean>


    <!-- 扫描com这个包里的所有类，把里面配上相应注解的类全都放在容器中进行管理 -->
    <context:component-scan base-package="com.tdls"/>

    <!--注解配置，告诉spring用哪个实现类，注入到这个bean中-->
    <!--<bean id = "userMapper" class="com.gtafe.dao.UserMapper"/>
    <bean id="userService" class="com.gtafe.service.impl.UserServiceImpl"/>
    <bean id="irs" class="com.gtafe.service.impl.ExchangeRateServiceImpl"/>
   <bean id = "userMapper" class="com.gtafe.dao.UserMapper"/>-->
   
    <bean id="quartzInsert" class="com.tdls.job.AutoStartInit"></bean>
   
    <!-- Spring定时器注解开关--> 
    <task:annotation-driven /> 
    
	<!-- 告诉spring 容器采用注解配置：扫描注解配置； -->
	<context:annotation-config />  
</beans>